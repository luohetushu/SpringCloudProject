消息中间件作用：异步通信、应用解藕、流量削峰

消息服务两个重要概念：
  消息代理（message broker）：消息代理接管消息发送者发送的消息
  目的地（destination）：由消息代理将消息发送者发送的消息准确传递到指定目的地

两种消息发送和接收模型：
1、P2P(Point to Point)模型，即采用点对点的方式发送消息
   P2P模型是基于队列的，消息生产者发送消息到队列，消息消费者从队列中接收消息，队列的存在使得消息的异步传输称为可能，P2P模型在点对点的情况下进行消息传递时采用
   注：消息只有唯一的发送者和接受者，但并不是说只有一个接收者，todo 当其中一个接收者接受到消息，另外的接收者们则将无法接收到消息
2、Pub/Sub(Publish/Subscribe，即发布-订阅)模型
   向一个内容节点（称为 topic 主题）发布和订阅消息
   消息发布将消息发布到某个主题，消息订阅者则从主题订阅消息，主题使得消息的订阅者与消息的发布者互相保持独立
   发布-订阅模型在消息的一对多广播时采用


JMS(Java Message Service)：Java 消息服务
   基于 JVM 的消息代理规范，如 JVM 实现：ActiveMQ、HornetMQ

AMQP（Advanced Message Queuing Protocol）：高级消息队列协议
   也是一个消息代理规范，兼容 JMS，如 AMQP 实现：RabbitMQ

RabbitMQ 属于 AMQP 的开源实现：
核心概念：
Message：消息，消息是不具名的，由消息头和消息体组成。消息体是不透明的，而消息头则由一系列的可选属性组成，
         这些属性包括 routing key（路由键）、priority（优先级）、delivery-mode（指定消息持久性存储等模式）等
Publisher：消息生产者，向交换器发布消息的客户端应用程序
Exchange：交换器，用来接收生产者发送的消息并将消息路由给服务器中的队列
    类型：direct（默认）、fanout、topic 和 headers，不同类型的 Exchange 转发消息的策略不同
Queue：消息队列，用来保存消息直到发送给消费者。是消息的容器，也是消息的终点。一个消息可以投入一个或多个队列。
       消息一直在队列里面，等待消费者连接到队列并将其取走
Binding：绑定，用于消息队列和交换器之间的关联。一个绑定就是基于路由键将交换器和消息队列连接起来的路由规则。
     Binding 决定交换器的消息应该发送到哪个消息队列
     Exchange 和 Queue 的绑定可以是多对多的关系
Connection：网络连接，比如一个 TCP 连接
Channel：信道，多路复用连接中的一条独立的双向数据流通道。信道上建立在真实的 TCP 连接内的虚拟连接，AMPQ 命令都是通过信道发出去的
Consumer：消息的消费者，从消息队列取得消息的客户端应用程序
Virtual Host：虚拟主机，表示一批交换器、消息队列和相关对象。vhost 是 AMQP 概念的基础，必须在连接时指定，RabbitMQ 默认的 vhost 是 /
Broker：表示消息队列服务器实体

Exchange 和 Queue 的绑定可以是多对多的关系：
    发送的消息指定指定类型的 Exchange，根据消息中的 routing key 与 队列中的 binding key 匹配策略，消息被发送到匹配的队列
Exchange 类型：不同类型的交换器决定了消息中的 routing key 与 队列中的 binding key 的匹配策略
    Direct Exchange：完全匹配、单播的模式，即典型的点对点通信模型
                     消息中的 routing key 与 队列中的 binding key 必须完全相同才会指定
    Fanout Exchange：每个发到该交换器的消息都会分到所有绑定的队列上，即典型的广播模式
                     该类型交换器不处理消息中的 routing key
    Topic Exchange：允许消息中的 routing key 与 队列中的 binding key 模糊匹配
                    队列中的 binding key 使用模糊的模式，使用通配符，如 rider.#、*.news // todo # 匹配0个或多个单词；* 匹配1个单词
                    消息中的 routing key 指定具体的 rider.news

todo 工具
消息中间件：RabbitMQ
命令启动：rabbitmq-server   // 启动目录：/usr/local/sbin  todo 已在 .bash_profile 中配置
打开可视化界面：http://localhost:15672  用户名：guest   密码：guest














